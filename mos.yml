author: mongoose-os
description: A demo Mongoose OS firmware for C/C++
version: 1.0
arch: esp32

libs_version: ${mos.version}
modules_version: ${mos.version}
mongoose_os_version: ${mos.version}

tags:
  - c

sources:
  - src

filesystem:
  - fs

config_schema:
  - ["dht.pin", "i", 27, { title: "DHT 11 GPIO PIN" }]
  - ["mq135.pin", "i", 36, { title: "MQ135 GPIO PIN" }]
  - ["button.pin", "i", 0, { title: "Boot Button GPIO PIN" }]

includes:
  - libs

libs:
  - origin: https://github.com/mongoose-os-libs/boards
  - origin: https://github.com/mongoose-os-libs/core
  - origin: https://github.com/mongoose-os-libs/dht
  - origin: https://github.com/mongoose-os-libs/adc
  #- origin: https://github.com/mongoose-os-libs/fstab
  #- origin: https://github.com/mongoose-os-libs/vfs-fs-lfs
  - origin: https://github.com/mongoose-os-libs/rpc-uart
  - origin: https://github.com/mongoose-os-libs/rpc-service-fs
  - origin: https://github.com/mongoose-os-libs/rpc-service-config

cflags:
  - "-Wimplicit-fallthrough=0"

#conds:
  #- when: mos.platform == "esp32"
  #  apply:
  #    build_vars:
  #      ESP_IDF_SDKCONFIG_OPTS: >
  #        ${build_vars.ESP_IDF_SDKCONFIG_OPTS}
  #        CONFIG_FREERTOS_UNICORE=y
  #- when: mos.platform == "esp32"
  #  apply:
  #    build_vars: # Add these
  #      ESP_IDF_EXTRA_PARTITION: fs_ext,data,spiffs,,256K # two lines

# Used by the mos tool to catch mos binaries incompatible with this file format
manifest_version: 2017-05-18
